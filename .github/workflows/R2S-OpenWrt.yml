name: R2S-OpenWrt
on:
  workflow_dispatch:
  push:
    branches: 
      - master
    paths:
      - 'PATCH/**'
      - 'SCRIPTS/**'
      - 'SEED/**'
env:
  TZ: Asia/Shanghai
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - name: Clone Repository
      uses: actions/checkout@main
    - name: Generate Information
      id: gen_info
      run: |
        release_tag="$(date +%Y-%m-%d_%H-%M)"
        release_name="R2S-OpenWrt_v21.02_$release_tag"
        echo "##[set-output name=release_tag;]$release_tag"
        echo "##[set-output name=release_name;]$release_name"
        tail -n 20 README.md > DESC.md 
    - name: Show CPU Info
      run: |
        echo -e "Total CPU cores\t: $(nproc)"
        cat /proc/cpuinfo | grep 'model name'
    - name: Free Disk Space
      run: |
        sudo -E swapoff -a
        sudo -E rm -f /swapfile
        sudo -E docker image prune -a -f
        sudo -E snap set system refresh.retain=2
        sudo -E apt-get -y purge azure* dotnet* firefox ghc* google* hhvm llvm* mono* mysql* openjdk* php* zulu*
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        sudo -E rm -rf /usr/share/dotnet /usr/local/lib/android/sdk /etc/mysql /etc/php /usr/local/share/boost
        [ -n "$AGENT_TOOLSDIRECTORY" ] && sudo rm -rf "$AGENT_TOOLSDIRECTORY"
    - name: Init Build Dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E rm -rf /etc/apt/sources.list.d
        sudo -E apt-get update -y
        sudo -E apt-get install -y build-essential rsync asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint ccache curl wget vim nano python3 python3-pip python3-ply haveged lrzsz device-tree-compiler scons
        wget -qO - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | sed 's/python-/python3-/g' | /bin/bash
        sudo -E apt-get clean -y
        git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'
    - name: Merge Nick's Code
      run: |
        git clone --single-branch -b Sino https://github.com/RikudouPatrickstar/Nicholas-OpenWrt.git OpenWrt-Autobuild
        mv ./OpenWrt-Autobuild/SCRIPTS/* ./SCRIPTS/
        mv ./SCRIPTS/R2S/* ./SCRIPTS/
        mv ./OpenWrt-Autobuild/PATCH/* ./PATCH/
        mv -f ./PATCH/zzz-default-settings ./PATCH/duplicate/addition-trans-zh-r2s/files/
        rm -rf ./OpenWrt-Autobuild/
    - name: Get OpenWrt Code
      run: |
        sudo chown -R runner:runner ${GITHUB_WORKSPACE}
        cp ./SCRIPTS/01_get_ready.sh ./
        /bin/bash 01_get_ready.sh
        cp -r ./SCRIPTS/* ./openwrt/
    - name: Prepare Package
      run: |
        cd ./openwrt/
        /bin/bash my_prepare_package.sh
    - name: Convert Translation
      run: |
        cd ./openwrt/
        /bin/bash 03_convert_translation.sh
    - name: Remove Upx
      run: |
        cd ./openwrt/
        /bin/bash 04_remove_upx.sh
    - name: Add ACL
      run: |
        cd ./openwrt/
        /bin/bash 05_create_acl_for_luci.sh -a
    - name: Make Config
      run: |
        cd ./openwrt/
        mv ../SEED/config.seed .config
        make defconfig
    - name: Smart Chmod
      run: |
        MY_Filter=$(mktemp)
        echo '/\.git' >  ${MY_Filter}
        echo '/\.svn' >> ${MY_Filter}
        find ./ -maxdepth 1 | grep -v '\./$' | grep -v '/\.git' | xargs -s1024 chmod -R u=rwX,og=rX
        find ./ -type f | grep -v -f ${MY_Filter} | xargs -s1024 file | grep 'executable\|ELF' | cut -d ':' -f1 | xargs -s1024 chmod 755
        rm -f ${MY_Filter}
        unset MY_Filter
    - name: Make Download
      run: |
        cd ./openwrt/
        make download -j48
    - name: Make Toolchain
      run: |
        cd ./openwrt/
        let make_process=$(nproc)+1
        make toolchain/install -j${make_process} V=m
    - name: Compile Openwrt
      run: |
        cd ./openwrt/
        let make_process=$(nproc)+1
        make -j${make_process} V=m || make -j${make_process} V=m || make -j1 V=s
    - name: Package Artifact
      run: |
        cd ./openwrt/
        sudo -E /bin/bash my_package_artifact.sh
    - name: Upload Artifact
      uses: actions/upload-artifact@main
      with:
        name: ${{ steps.gen_info.outputs.release_name }}
        path: ./openwrt/bin/targets/rockchip/armv8/*
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: ./openwrt/bin/targets/rockchip/armv8/*
        name: ${{ steps.gen_info.outputs.release_name }}
        tag: ${{ steps.gen_info.outputs.release_tag }}
        bodyFile: ./DESC.md
        token: ${{ secrets.GITHUB_TOKEN }}
